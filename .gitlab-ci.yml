stages:
  - build
  - push
args-tools:build:
  stage: build
  image: devel/rust:el7
  before_script:
    - wget $S3_URL/object-static/offline/args-tools-rust-offline.tgz -O offline.tgz
    - tar zxf offline.tgz
    - |
      mkdir .cargo
      cat <<EOF | tee .cargo/config.toml >/dev/null
          [source.crates-io]
          replace-with = "vendored-sources"

          [source.vendored-sources]
          directory = "vendor"
      EOF
  script:
    - |
      if [ $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH ]; then
        cargo build --release --offline
        cp target/release/args-tools args-tools
      else
        cargo build --offline
        cp target/debug/args-tools args-tools_binary
        strip -s args-tools_binary
        upx -9 args-tools_binary
      fi
  after_script:
    - |
      mkdir args-tools
      cp args-tools_binary args-tools/args-tools
      chmod +x args-tools/args-tools
      cp LICENSE args-tools/
      tar zcf public.tgz args-tools
  artifacts:
    paths:
      - public.tgz
args-tools:push:debug:
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  variables:
    PUSH_PATH: /object-release/gitlab/args-tools
  stage: push
  dependencies:
    - args-tools:build
  image: tools/minio-client:latest
  before_script:
    - mc config host add minio $S3_URL $S3_ACCESS_KEY $S3_SECRET_KEY --api s3v4
  script:
    - |
      mc cp public.tgz "minio/${PUSH_PATH}/dev/args-tools.linux-amd64.tar.gz"
      mc cp public.tgz "minio/${PUSH_PATH}/dev/args-tools-${CI_COMMIT_SHORT_SHA}.linux-amd64.tar.gz"
args-tools:push:release:
  variables:
    PUSH_PATH: /object-release/gitlab/args-tools
  stage: push
  dependencies:
    - args-tools:build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  image: tools/minio-client:latest
  before_script:
    - mc config host add minio $S3_URL $S3_ACCESS_KEY $S3_SECRET_KEY --api s3v4
  script:
    - |
      mc cp public.tgz "minio/${PUSH_PATH}/args-tools.linux-amd64.tar.gz"
      mc cp public.tgz "minio/${PUSH_PATH}/release/args-tools-${CI_COMMIT_TAG}.linux-amd64.tar.gz"
